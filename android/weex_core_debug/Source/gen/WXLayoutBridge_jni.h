// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     /Users/miomin/Desktop/workspace/alibaba/WeexCore-dev/WeexCore-
//    dev/android/weex_core_debug/Source/prebuild/jni_generator.py
// For
//     com/taobao/weex/ui/layout/WXLayoutBridge

#ifndef com_taobao_weex_ui_layout_WXLayoutBridge_JNI
#define com_taobao_weex_ui_layout_WXLayoutBridge_JNI

#include <jni.h>

//#include "base/android/jni_int_wrapper.h"

// Step 1: forward declarations.
namespace {
const char kWXLayoutBridgeClassPath[] =
    "com/taobao/weex/ui/layout/WXLayoutBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_WXLayoutBridge_clazz = NULL;
#define WXLayoutBridge_clazz(env) g_WXLayoutBridge_clazz

}  // namespace

static void Layout(JNIEnv* env, jobject jcaller);

// Step 2: method stubs.

static intptr_t g_WXLayoutBridge_measure = 0;
static void Java_WXLayoutBridge_measure(JNIEnv* env, int widthMeasureMode,
    int heightMeasureMode) {
  /* Must call RegisterNativesImpl()  */
  //CHECK_CLAZZ(env, WXLayoutBridge_clazz(env),
  //    WXLayoutBridge_clazz(env));
  jmethodID method_id =
      base::android::GetMethod(
      env, WXLayoutBridge_clazz(env),
      base::android::STATIC_METHOD,
      "measure",

"("
"I"
"I"
")"
"V",
      &g_WXLayoutBridge_measure);

     env->CallStaticVoidMethod(WXLayoutBridge_clazz(env),
          method_id, int(widthMeasureMode), int(heightMeasureMode));
  base::android::CheckException(env);

}

// Step 3: RegisterNatives.

static const JNINativeMethod kMethodsWXLayoutBridge[] = {
    { "nativeLayout",
"("
")"
"V", reinterpret_cast<void*>(Layout) },
};

static bool RegisterNativesImpl(JNIEnv* env) {

  g_WXLayoutBridge_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kWXLayoutBridgeClassPath).Get()));

  const int kMethodsWXLayoutBridgeSize =
      sizeof(kMethodsWXLayoutBridge)/sizeof(kMethodsWXLayoutBridge[0]);

  if (env->RegisterNatives(WXLayoutBridge_clazz(env),
                           kMethodsWXLayoutBridge,
                           kMethodsWXLayoutBridgeSize) < 0) {
    //jni_generator::HandleRegistrationError(
    //    env, WXLayoutBridge_clazz(env), __FILE__);
    return false;
  }

  return true;
}

#endif  // com_taobao_weex_ui_layout_WXLayoutBridge_JNI
